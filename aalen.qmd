# Additive regression {-}

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
```

```{r libs}
library(survival)
library(tibble)
library(dplyr)
```

At the university hospital of the University of Massachusetts one has for a number of years studied the survival of patients admitted with an acute myocardial infarction (AMI- aka HEART ATTACK!). One **aim of the study** has been to investigate whether the **survival of AMI patients has improved over time**. A number of covariates were measured at hospitalization. In addition to information on time of hospitalization (here given in five years periods), we will in this problem restrict attention to the two demographic covariates age and sex, one covariate that is related to the seriousness of the AMI (amount of “heart enzyme”), and one covariate that gives information on whether the patient has had an AMI earlier or not. Further we will restrict attention to the first three years after AMI, so patients who live longer than $1095 = 3 \times 365$ days have been censored at that time.

You may read the AMI-data into R by the command:
```{r}
ami=read.table("https://www.med.uio.no/imb/english/research/centres/ocbe/courses/imb9335/ami.txt",header=T) %>% as_tibble()
ami
```

The data are organized with one line for each of the $481$ patients, and with the following variables in the seven columns:

- id: Patient number
- days: Number of days from hospitalization to death or censoring
- status: Indicator for death (1) or censoring (0)
- per: Five year period (1 = 1975-79, 2 = 1980-84, 3 = 1985-89)
- age: Age at hospitalization (in years)
- sex: Sex (0 = male, 1 = female)
- enzym: Amount of “heart enzyme” measured as ”international units” divided by 100
- prev: Information on earlier AMIs (0 = no earlier AMI, 1 = at least one earlier AMI).

We will study the effect of the five covariates (per, age, sex, enzym and prev) using the additive regression model. Our main interest lies in a simultaneous analysis of all five covariates. But nevertheless we will start out by fitting additive regression models with one covariate at a time.

a) First we fit an additive model with sex as the only covariate and plot the estimated cumulative regression function. This is achieved by the commands:

```{r}
fit.sex = survival::aareg(Surv(days,status) ~ factor(sex), data=ami)
fit.sex

print(fit.sex, maxtime = 100)
```

Also test the null hypothesis that there is **no effect of sex** (marginally, i.e. when not corrected for the other covariates). You obtain the standardized test and its p-value from the last two columns of the output from the command print(fit.sex). (The maxtime option also works for the print command.)

```{r}
res = summary(fit.sex) # , maxtime = 100
res$table[2,'p'] # borderline
```

Intercept figure always shows the baseline hazard (reference category when modeling with one covariate or all reference values when modeling with more covariates):
```{r}
par(mfrow=c(1,2))
plot(fit.sex)
```

You may want to **focus on the first 100 days after hospitalizations**.
```{r}
par(mfrow=c(1,2))
plot(fit.sex, maxtime = 100)
```

Effect of `sex` variable is stronger the first 100 days (p-value):
```{r}
res = summary(fit.sex, maxtime = 100)
res$table[2,'p']
```

b) Fit an additive regression model for each of the other **four covariates per, age, enzym and prev (one at a time)**. For each of the covariates you should interpret the estimates you obtain for the cumulative baseline and the cumulative regression function and decide whether the covariate has a significant effect (when not corrected for the effects of the other covariates). In order to ease interpretation of the estimated cumulative baseline function, you should center the numeric covariates age and enzym by subtracting their means.

Scale continuous variables:

- Note that the **centering value** (e.g. mean or other) is like the **reference value**:
```{r}
ami2 = ami %>% 
  mutate(age = (age - mean(age))/sd(age), enzym = (enzym - mean(enzym))/sd(enzym))
```

- `per` (hospitalization period) has **no effect**:
```{r}
fit.per = aareg(formula = Surv(days, status) ~ factor(per), data = ami)
fit.per
par(mfrow = c(1,3))
plot(fit.per)
```

```{r}
fit.age = aareg(formula = Surv(days, status) ~ age, data = ami)
fit.age
par(mfrow = c(1,2))
plot(fit.age)
```

- Scaling/Centering continuous variable `age` is important for the interpretation of the baseline hazard!!!
- Hazard increases with larger `age`! (there is an effect)
```{r}
fit.age2 = aareg(formula = Surv(days, status) ~ age, data = ami2)
fit.age2
par(mfrow = c(1,2))
plot(fit.age2)
```

- `enzym` has **no significant effect**:
```{r}
fit.enzym = aareg(formula = Surv(days, status) ~ enzym, data = ami2)
fit.enzym
par(mfrow = c(1,2))
plot(fit.enzym)
```

- `prev` => previous hospitalization has significant effect:
```{r}
fit.prev = aareg(formula = Surv(days, status) ~ factor(prev), data = ami)
fit.prev
par(mfrow = c(1,2))
plot(fit.prev)
```

c) Fit an additive regression model with all the five covariates. Determine which of covariates have a significant effect on the mortality (using “backwards elimination”), and thereby obtain a “final model” where all covariates have a significant effect. Interpret the estimates of the cumulative baseline and the cumulative regression functions for your “final model”.

```{r}
fit.all = aareg(formula = Surv(days, status) ~ factor(per) + age + factor(sex) + enzym + factor(prev), data = ami2)
fit.all
par(mfrow = c(2,4))
plot(fit.all)
```

```{r}
print(fit.all, maxtime = 100)
par(mfrow = c(2,4))
plot(fit.all, maxtime = 100)
```

Let's keep only the variables in the model that had a significant effect:
```{r}
fit.final = aareg(formula = Surv(days, status) ~ age + enzym + factor(prev), data = ami2)
fit.final
par(mfrow = c(2,2))
plot(fit.final)
```

d) When analyzing censored survival data, Cox regression is commonly used. Discuss benefits and drawbacks of using the additive model (rather than Cox’s model) for analyzing the AMI data.

- With additive regression you can check what is the treatment effect across time, which you lose when doing CoxPH!

